// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	domain "kami/domain"

	mock "github.com/stretchr/testify/mock"
)

// TwilioServiceRepository is an autogenerated mock type for the TwilioServiceRepository type
type TwilioServiceRepository struct {
	mock.Mock
}

// GetTwilioConfig provides a mock function with given fields:
func (_m *TwilioServiceRepository) GetTwilioConfig() (*domain.TwilioService, error) {
	ret := _m.Called()

	var r0 *domain.TwilioService
	if rf, ok := ret.Get(0).(func() *domain.TwilioService); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.TwilioService)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTwilioServiceRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewTwilioServiceRepository creates a new instance of TwilioServiceRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTwilioServiceRepository(t mockConstructorTestingTNewTwilioServiceRepository) *TwilioServiceRepository {
	mock := &TwilioServiceRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
