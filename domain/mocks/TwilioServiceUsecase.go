// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TwilioServiceUsecase is an autogenerated mock type for the TwilioServiceUsecase type
type TwilioServiceUsecase struct {
	mock.Mock
}

// SendVerificationSMS provides a mock function with given fields: phone
func (_m *TwilioServiceUsecase) SendVerificationSMS(phone string) error {
	ret := _m.Called(phone)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(phone)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// VerificationCheck provides a mock function with given fields: phone, code
func (_m *TwilioServiceUsecase) VerificationCheck(phone string, code string) error {
	ret := _m.Called(phone, code)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(phone, code)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewTwilioServiceUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewTwilioServiceUsecase creates a new instance of TwilioServiceUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTwilioServiceUsecase(t mockConstructorTestingTNewTwilioServiceUsecase) *TwilioServiceUsecase {
	mock := &TwilioServiceUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
